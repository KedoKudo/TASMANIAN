# disable openmp on non-Linux platforms
UNAME = $(shell uname)
ifeq ($(UNAME), Linux)
COMPILE_OPTIONS = -fopenmp
else
COMPILE_OPTIONS = -Wno-unknown-pragmas
endif

# use only for CUDA support (see example below)
TSG_CUDA_KERNELS = 
NVCC = 
NVCC_OPT = 

# Default C++ compiler
CC = g++
OPTC = -O3 -ffast-math -mtune=native $(COMPILE_OPTIONS) -fPIC -Wall -Wextra -Wshadow -Wuninitialized -Wstrict-aliasing -pedantic 
OPTL = $(OPTC)

# Default Fortran compiler
FF = gfortran
OPTF = -O3 -fno-f2c -mtune=native $(COMPILE_OPTIONS) -fPIC -Wall -Wextra -Wshadow -pedantic -Wuninitialized
OPTLFF = $(OPTF)

# Default common libraries
CommonIADD =
CommonLADD =
CommonLIBS = -lm

# To Enable/Disable advanced options:
# set the compiler in the CC variable
# set the compiler flags, including the -D directives to the OPTC and OPTL variables
# set the -I directives to the CommonIADD variables
# set the -L directives to the CommonLADD variables
# set the -l directives to the CommonLIBS variables
#
# The -D directives list:
#
# BLAS:   -DTASMANIAN_CPU_BLAS
# CUDA:   -DTASMANIAN_CUDA
# CUBLAS: -DTASMANIAN_CUBLAS
#    MPI:  no -D directive needed
#          but you must manually edit ./Config/tdrEnableMPI.hpp and uncomment
#          //#include <mpi.h>


# Example that enables BLAS
#CXXFLAGS = -O3 -ffast-math -mtune=native $(COMPILE_OPTIONS) -fPIC -Wall -Wextra -Wshadow -Wuninitialized -Wstrict-aliasing -pedantic 
#OPTC = $(CXXFLAGS) -DTASMANIAN_CPU_BLAS
#CommonLIBS = -lblas -lm


# Example that enables cuBlas and cuSparse
#CC = nvcc
#CXXFLAGS = -O3 -ffast-math -mtune=native $(COMPILE_OPTIONS) -fPIC -Wall -Wextra -Wshadow -Wuninitialized -Wstrict-aliasing -pedantic 
#OPTC = --compiler-options "-std=c++11 $(CXXFLAGS)" -DTASMANIAN_CUBLAS
#CommonLIBS = -lcublas -lcusparse


# Example that enables cuBlas and cuSparse and CUDA
# in principle, the standard compiler (e.g., gcc) can link to cuBlas, 
# the advantage of using nvcc is that it automatically adds paths to the libraries
# nvcc is required for the tsgCudaKernels.cu file
#CC = nvcc
#NVCC = nvcc
#CXXFLAGS = -O3 -ffast-math -mtune=native $(COMPILE_OPTIONS) -fPIC -Wall -Wextra -Wshadow -Wuninitialized -Wstrict-aliasing -pedantic 
#OPTC = --compiler-options "$(CXXFLAGS)" -DTASMANIAN_CUBLAS -DTASMANIAN_CUDA -D_FORCE_INLINES
#NVCC_OPT = --compiler-options "$(CXXFLAGS)" -DTASMANIAN_CUBLAS -DTASMANIAN_CUDA -D_FORCE_INLINES
#CommonLIBS = -lcublas -lcusparse
#TSG_CUDA_KERNELS = tsgCudaKernels.cu.o


# Example that enables MPI: need to manually edit /Config/tdrEnableMPI.hpp and uncomment #include <mpi.h>
#CC = mpic++
#CXXFLAGS = -O3 -ffast-math -mtune=native $(COMPILE_OPTIONS) -fPIC -Wall -Wextra -Wshadow -Wuninitialized -Wstrict-aliasing -pedantic 
#OPTC = -std=c++11 $(CXXFLAGS) 
#CommonLIBS = -lm
